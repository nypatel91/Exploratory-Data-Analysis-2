merged$gdpgrp <- cut(merged3[,2],breaks=quantile(merged[,2]))
merged$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2]))
merged3$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2]))
merged3$gdpgrp
table(merged3$gdpgrp)
table(merged3$gdpgrp,merged3$Income.Group)
merged3$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2].c(0.2,0.4,0.6,0.8,1)))
merged3$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2],c(0.2,0.4,0.6,0.8,1)))
table(merged3$gdpgrp)
merged3$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2]))
merged3$gdpgrp <- cut(merged3[,2],breaks=quantile(merged3[,2], probs = seq(0, 1, by = 0.20)))
table(merged3$gdpgrp)
table(merged3$gdpgrp,merged3$Income.Group)
source('~/Desktop/DocFile/Mod3Q3.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(nlme)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
t
xyplot(weight ~ Time | Diet, BodyWeight)
setwd("~/UCI HAR Dataset")
setwd("UCI HAR Dataset")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
features
features(cols)
features[cols]
features[,cols]
features[1]
View(features)
features[2]
features[2[1]]
features[2,1]
features[2,2]
features[cols,2]
rows <- grep("mean\\(\\)|std\\(\\)", features[,2])
features_select <- features[rows,2]
features_select = gsub('mean', 'Mean', features_select)
features_select = gsub('std', 'Std', features_select)
features_select = gsub('[()-]', '', features_select)
X <- X[,cols]
alldata <- cbind(X,Y,Z)
#3. Introduce col. names and labels
colnames(alldata) <- c(features_select,"Activity","Subject")
activity_labels = read.table("activity_labels.txt")
alldata$Activity = factor(alldata$Activity,levels = c(1:6),
labels = activity_labels[,2])
#4. Tidy data
library(reshape2)
alldata.melt <- melt(alldata, id = c("Subject","Activity"))
alldata.cast <- dcast(alldata.melt,Activity + Subject ~ variable,mean)
#5 Write the data
write.table(alldata.cast, "tidy.txt", row.names = FALSE, quote = FALSE)
View(alldata.cast)
View(X)
View(Y)
View(Z)
View(Z)
View(activity_labels)
View(alldata.cast)
View(alldata.melt)
View(alldata)
View(alldata.melt)
source('~/.active-rstudio-document')
View(Z)
View(Y)
View(alldata)
tmp1 <- read.table("train/X_train.txt")
tmp2 <- read.table("test/X_test.txt")
X <- rbind(tmp1,tmp2)
View(X)
tmp1 <- read.table("train/y_train.txt")
tmp2 <- read.table("test/y_test.txt")
Y <- rbind(tmp1,tmp2)
View(Y)
tmp1 <- read.table("train/subject_train.txt")
tmp2 <- read.table("test/subject_test.txt")
Z <- rbind(tmp1,tmp2)
View(Z)
features <- read.table("features.txt")
select <- grep("mean\\(\\)|std\\(\\)", features[,2])
features_select <- features[select,2]
features_select = gsub('mean', 'Mean', features_select)
features_select = gsub('std', 'Std', features_select)
features_select = gsub('[()-]', '', features_select)
X <- X[,select]
setwd(~/)
setwd("~"
setwd("~")
setwd("~/Desktop/DocFile")
data <- read.table("household_power_consumption.txt",header=TRUE,sep=";",stringsAsFactors=FALSE,dec=".")
head(data)
class(data)
select_data <- data[data$Date %in% c("1/2/2007","2/2/2007"),]
View(select_data)
hist(select_data$Global_active_power,col="red",main="Global Active Power")
GlobalActivePower <- as.numeric(select_data$Global_active_power)
hist(GlobalActivePower,col="red",main="Global Active Power")
hist(GlobalActivePower,col="red",main="Global Active Power",
xlab="Global Active Power (kilowatts)")
png("plot1.png", width=480, height=480)
hist(GlobalActivePower,col="red",main="Global Active Power",
xlab="Global Active Power (kilowatts)")
dev.off()
GlobalActivePower <- as.numeric(select_data$Global_active_power)
day <- weekdays(as.Date(select_data$Date,"%d-%m-%Y"))
plot(day,GlobalActivePower)
day
day <- weekdays(as.Date(select_data$Date,"%d/%m/%Y"))
day
plot(day,GlobalActivePower)
View(data)
day <- as.Date(select_data$Date,"%d/%m/%Y")
plot(day,GlobalActivePower)
plot(day,GlobalActivePower,type="l")
head(data)
plot(x_axis,GlobalActivePower,type="l")
x_axis <- strptime(paste(select_data$Date,select_data$Time,sep=" "),"%d/%m/%Y %H:%M:%S")
plot(x_axis,GlobalActivePower,type="l")
plot(x_axis,GlobalActivePower)
ylab="Global Active Power (kilowatts)")
main="Global Active Power")
plot(x_axis,GlobalActivePowertype="l",xlab="",ylab="Global Active Power (kilowatts)",
plot(x_axis,GlobalActivePowertype="l",xlab="",ylab="Global Active Power (kilowatts)", main="Global Active Power")
plot(x_axis,GlobalActivePowertype="l",ylab="Global Active Power (kilowatts)", main="Global Active Power")
plot(x_axis,GlobalActivePowertype="l",ylab="Global Active Power (kilowatts)", main="Global Active Power")
plot(x_axis,GlobalActivePowertype="l",xlab="",ylab="Global Active Power (kilowatts)",main="Global Active Power")
main="Global Active Power")
ylab="Global Active Power (kilowatts)")
ylab="Global Active Power (kilowatts)")
plot(x_axis,GlobalActivePower,type="l",xlab="Day",ylab="Global Active Power (kilowatts)")
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",ylab="Global Active Power (kilowatts)")
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
GlobalActivePower <- as.numeric(select_data$Global_active_power)
x_axis <- strptime(paste(select_data$Date,select_data$Time,sep=" "),"%d/%m/%Y %H:%M:%S")
png("plot2.png", width=480, height=480)
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
dev.off()
head(data)
SM1<- as.numeric(select_data$Sub_metering_1)
SM2<- as.numeric(select_data$Sub_metering_2)
SM3<- as.numeric(select_data$Sub_metering_3)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Global Active Power (kilowatts)")
lines(x_axis,SM2)
lines(x,axis,SM3)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Global Active Power (kilowatts)")
lines(x_axis,SM2)
lines(x_axis,SM3)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend(topright,c(Sub_metering_1,Sub_metering_2,Sub_metering_3))
legend(topright,c(SM1,SM2,SM3))
legend(topright,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue")
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend(topright,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue")
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend(topright,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"))
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"))
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"),lty=1.lwd=2.5)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"),lty=1,lwd=2.5)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"),lty,lwd)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"),lty=2,lwd)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),col=c("black","red","blue"),lty=2,lwd=1.5)
png("plot3.png", width=480, height=480)
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend(topright,c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
dev.off()
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
par(mfrow=c(1,2))
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
par(mfrow=c(1,2),mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
plot(x_axis,SM1,type="l",xlab="Day",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
head(daya)
head(data)
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",
ylab="Global Active Power (kilowatts)")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power")
plot(x_axis,voltage,type="l",ylab="Voltage")
voltage <- as.numeric(select_data$Voltage)
r_pwr <- as.numeric(select_data$Global_reactive_power)
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",
ylab="Global Active Power (kilowatts)")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power")
plot(x_axis,voltage,type="l",ylab="Voltage")
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",
ylab="Global Active Power (kilowatts)")
plot(x_axis,voltage,type="l",ylab="Voltage")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power")
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5,bty="o")
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
png("plot2.png", width=480, height=480)
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
dev.off()
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
png("plot4.png", width=480, height=480)
par(mfrow=c(2,2))
plot(x_axis,GlobalActivePower,type="l",ylab="Global Active Power (kilowatts)",xlab="")
plot(x_axis,voltage,type="l",ylab="Voltage",xlab="")
plot(x_axis,SM1,type="l",ylab="Energy Sub Metering",xlab="")
lines(x_axis,SM2,col="red")
lines(x_axis,SM3,col="blue")
legend("topright",c("Sub_metering_1","Sub_metering_2","Sub_metering_3"),
col=c("black","red","blue"),lty=1,lwd=1.5)
plot(x_axis,r_pwr,type="l",ylab="Global_reactive_power",xlab="")
dev.off()
png("plot2.png", width=480, height=480)
plot(x_axis,GlobalActivePower,type="l",main="Global Active Power",xlab="Day",
ylab="Global Active Power (kilowatts)")
dev.off()
library("swirl")
swirl()
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf = read.csv(path2csv,stringsAsFactors = FALSE)
info()
play()
head(mydf)
nxt()
read.csv(path2csv,stringsAsFactors = FALSE)
mydf = read.csv(path2csv,stringsAsFactors = FALSE)
info()
skip()
info()
main()
bye()
swirl()
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,
| ip_id, package, country)
select(cran,ip_id, package, country)
5:20
select(cran, r_arch:country)
select(country:r_arch,cran)
select(r_arch:country,cran)
select(cran,country:r_arch
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-[5:20]
-(5:20)
select(-(X:time))
select(-(X:size))
select(cran,-(X:size))
filter(cran,package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
cran
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!(is.na(c(3, 5, NA, 10)))
!is.na(c(3, 5, NA, 10))
filter(cran,!is.na(r_version))
cran2 = select(cran, size:ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran 3 <- select(cran, ip_id,package, size)
cran3 <- select(cran, ip_id,package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20,size_mb/2^10)
mutate(cran3, size_mb = size / 2^20,size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran)
by_package <- group_by(cran,package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
pack_sum <- summarize(by_package,
avg_bytes = )
pack_sum <- summarize(by_package,
pack_sum <- summarize(by_package,
count = ,
unique = ,
countries = ,
avg_bytes = )
?n
?n_distinct
pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id), countries =n_dinstinct(country),avg_bytes=mean(size))
pack_sum <- summarize(by_package, count = n(), unique = n_distinct(ip_id), countries =n_distinct(country),avg_bytes=mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum,count>679)
top_counts <- filter(pack_sum,count>679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts,desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique > 465)
View(top_unique)
top_counts_sorted <- arrange(top_unique,desc(unique))
top_unique_sorted <- arrange(top_unique,desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(tidyr)
student
students
?gather
gather(students, sex,count,-grade)
students2
res <- gather(students2,sex_class,count,-grade)
re
res
play()
gather(students2,type_class,count,-grade)
gather(students2,type,count,-grade)
nxt()
?seperate
?separate
separate (res,sex_class,c("sex","class"))
submit()
students3
submit()
submit()
submit()
?spread
submit()
extract_numeric("class5")
submit()
submit()
?mutate
?extract_numeric
submit()
students4
submit()
submit
submit()
submit()
passed
failed
passed <- mutate(passed,status,passed)
?mutate
passed <- mutate(passed,status,"passed")
mutate(passed,status,"passed")
library(dplyr)
passed <- mutate(passed,status="passed")
failed <- mutate(failed,status="failed")
bind_rows(passed,failed)
sat
play()
select(sat,-contains(total))
select(sat,-contains("total"))
?gather
gather(sat,read_male:write_fam,-score_range)
gather(sat,read_male,write_fam,-score_range)
nxt()
gather(sat,read_male,write_fam,-score_range)
submit()
submit()
sat %>%
select(-contains("total") %>%
gather(read_male:write_fem,count, -score_range)
sat %>% select(-contains("total") %>% gather(read_male:write_fem,count, -score_range)
gather(sat,read_male:write_fem,count, -score_range)
students2
gather(sat,read_male:write_fam,count, -score_range)
gather(sat,read_male,count, -score_range)
gather(sat,part_sex,count, -score_range)
submit()
submit()
?seperate
?seperate
submit()
?separate
submit()
submit()
submit()
submit()
setwd("~/Desktop/DocFile/Mod4P2")
source('~/Desktop/DocFile/Mod4P2/Plot6.R')
